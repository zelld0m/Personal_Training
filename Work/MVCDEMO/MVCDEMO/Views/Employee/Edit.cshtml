@model MVCDEMO.Models.Employee

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal"style="font-size:12px;font-family:Arial">

        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId)

        <div class="form-group">
            <!-- Name-->
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div><!-- Name End-->

        <div class="form-group">
            <!--Gender-->
            @*-----------------------------------------------LABEL---------------------------------------------*@
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">

                @* @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                @*-------------------------------------- Dropdownlist------------------------------------------------------- *@
                @Html.DropDownList("Gender", new List<SelectListItem>{
               new SelectListItem {Text = "Male",Value="Male" },
               new SelectListItem {Text = "Female",Value="Female" }
            }, "Select Gender", htmlAttributes: new { @class = "control-label col-md-5" })

                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div><!--Gender End-->

        <div class="form-group">
            <!--CITY-->
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div><!--CITY-->

        <div class="form-group">
            <!--DEPARTMENT   DROPDOWN NOT WORKING WELL BUT STILL SAVING-->
            @Html.LabelFor(model => model.DepartmentId, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @*       @Html.EditorFor(model => model.DepartmentId, new { htmlAttributes = new { @class = "form-control" } })*@
                <!-- this must match the model " DepartmentId" to be able to save   Bug Fixed-->
                @Html.DropDownList("DepartmentId", new List<SelectListItem>{

                new SelectListItem {Text = "IT",Value="1" },
                new SelectListItem {Text = "HR",Value="2" },
                new SelectListItem {Text = "Payroll",Value="3" }
            }, "Select Department", htmlAttributes: new { @class = "control-label col-md-5" })
            </div>
            @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
        </div><!--DEPARTMENT END-->
        <!--   -->
        @*<div class="form-group">
            <label> Date:</label>
            <input type="date" id="inputDate" /> =  <br />
            <label>Time:</label>
            <input type="time" /><br />
            <input type="submit" />*@


        @*<div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
        <!-- HireDate-->
        <div class="form-group" >
            @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4 " >
             
                @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                <br/>
                MM/DD/YYYY
            </div>
        </div>
        <!-- HireDate End-->

        <!-- Salary-->
        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Salary, new {  htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div><!-- Salary End-->



        <div class="form-group">
            <!-- PersonalWebSite-->
            @Html.LabelFor(model => model.PersonalWebSite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.PersonalWebSite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonalWebSite, "", new { @class = "text-danger" })
            </div>
        </div><!-- PersonalWebSite End-->


        <div class="form-group">
            <!-- Email Address-->
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div><!-- Email Address End-->


        <div class="form-group">
            <!-- Photo-->
            @Html.LabelFor(model => model.Photo,"Photo Location" ,htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div><!-- Photo End-->



        <div class="form-group">
            <!-- AlternateText-->
            @Html.LabelFor(model => model.AlternateText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.AlternateText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AlternateText, "", new { @class = "text-danger" })
            </div>
        </div><!-- AlternateText End-->
    </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>

        <div>
            @Html.ActionLink("Back to List", "ViewAllEmployee", "Employee")
        </div>

}

<script type="text/javascript">
    //$(document).ready(function(){
    //    $("#HireDate").datepicker
    //}
</script>